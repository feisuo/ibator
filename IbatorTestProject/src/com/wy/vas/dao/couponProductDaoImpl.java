package com.wy.vas.dao;

import com.wy.vas.domain.couponProduct;
import com.wy.vas.domain.couponProductCondition;
import java.sql.SQLException;

public class couponProductDaoImpl implements couponProductDao {

    /**
     * This method was generated by yrtz.
     * 该方法对应数据库表 coupon_product
     *
     * @ibatorgenerated 2015-12-10 23:04:49
     */
    public int countByCondition(couponProductCondition condition) throws SQLException {
        Integer count = (Integer)  getSqlMapClient().queryForObject("coupon_product.yrtz_countByCondition", example);
        return count.intValue();
    }

    /**
     * This method was generated by yrtz.
     * 该方法对应数据库表 coupon_product
     *
     * @ibatorgenerated 2015-12-10 23:04:49
     */
    public int deleteByPrimaryKey(String code, Integer id) throws SQLException {
        couponProduct key = new couponProduct();
        key.setCode(code);
        key.setId(id);
        int rows = getSqlMapClient().delete("coupon_product.yrtz_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by yrtz.
     * 该方法对应数据库表 coupon_product
     *
     * @ibatorgenerated 2015-12-10 23:04:49
     */
    public void insert(couponProduct record) throws SQLException {
        getSqlMapClient().insert("coupon_product.yrtz_insert", record);
    }

    /**
     * This method was generated by yrtz.
     * 该方法对应数据库表 coupon_product
     *
     * @ibatorgenerated 2015-12-10 23:04:49
     */
    public void insertSelective(couponProduct record) throws SQLException {
        getSqlMapClient().insert("coupon_product.yrtz_insertSelective", record);
    }

    /**
     * This method was generated by yrtz.
     * 该方法对应数据库表 coupon_product
     *
     * @ibatorgenerated 2015-12-10 23:04:49
     */
    public int updateByPrimaryKeySelective(couponProduct record) throws SQLException {
        int rows = getSqlMapClient().update("coupon_product.yrtz_updateByPrimaryKeySelective", record);
        return rows;
    }
}